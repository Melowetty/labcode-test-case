{
    "swagger": "2.0",
    "info": {
        "description": "This is solution of labcode test case",
        "title": "Labcode test case",
        "contact": {
            "name": "Melowetty",
            "url": "https://github.com/melowetty",
            "email": "melowetty@mail.ru"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/area": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Зоны"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.AreaShort"
                            }
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Зоны"
                ],
                "parameters": [
                    {
                        "description": "Area JSON",
                        "name": "area",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CreateAreaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.AreaDetailed"
                        }
                    },
                    "400": {
                        "description": "Validation body error",
                        "schema": {
                            "$ref": "#/definitions/model.CustomError"
                        }
                    }
                }
            }
        },
        "/area/{area_id}/camera": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Камеры"
                ],
                "parameters": [
                    {
                        "description": "Camera JSON",
                        "name": "area",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CreateCameraRequest"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "area id",
                        "name": "area_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.Camera"
                        }
                    },
                    "400": {
                        "description": "Validation body error",
                        "schema": {
                            "$ref": "#/definitions/model.CustomError"
                        }
                    }
                }
            }
        },
        "/area/{area_id}/camera/{camera_id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Камеры"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "area id",
                        "name": "area_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "camera id",
                        "name": "camera_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.Camera"
                        }
                    },
                    "400": {
                        "description": "Wrong query params",
                        "schema": {
                            "$ref": "#/definitions/model.CustomError"
                        }
                    },
                    "404": {
                        "description": "Entity not found",
                        "schema": {
                            "$ref": "#/definitions/model.CustomError"
                        }
                    }
                }
            },
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Камеры"
                ],
                "parameters": [
                    {
                        "description": "Camera JSON",
                        "name": "area",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UpdateCameraRequest"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "area id",
                        "name": "area_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "camera id",
                        "name": "camera_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.Camera"
                        }
                    },
                    "400": {
                        "description": "Validation body error",
                        "schema": {
                            "$ref": "#/definitions/model.CustomError"
                        }
                    },
                    "404": {
                        "description": "Entity not found",
                        "schema": {
                            "$ref": "#/definitions/model.CustomError"
                        }
                    }
                }
            }
        },
        "/area/{area_id}/{camera_id}": {
            "delete": {
                "tags": [
                    "Камеры"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "area id",
                        "name": "area_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "camera id",
                        "name": "camera_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Wrong query params",
                        "schema": {
                            "$ref": "#/definitions/model.CustomError"
                        }
                    },
                    "404": {
                        "description": "Entity not found",
                        "schema": {
                            "$ref": "#/definitions/model.CustomError"
                        }
                    }
                }
            }
        },
        "/area/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Зоны"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "area id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.AreaDetailed"
                        }
                    },
                    "400": {
                        "description": "Wrong query params",
                        "schema": {
                            "$ref": "#/definitions/model.CustomError"
                        }
                    },
                    "404": {
                        "description": "Entity not found",
                        "schema": {
                            "$ref": "#/definitions/model.CustomError"
                        }
                    }
                }
            },
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Зоны"
                ],
                "parameters": [
                    {
                        "description": "Area JSON",
                        "name": "area",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UpdateAreaRequest"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "area id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.AreaDetailed"
                        }
                    },
                    "400": {
                        "description": "Validation body error",
                        "schema": {
                            "$ref": "#/definitions/model.CustomError"
                        }
                    },
                    "404": {
                        "description": "Entity not found",
                        "schema": {
                            "$ref": "#/definitions/model.CustomError"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Зоны"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "area id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Wrong query params",
                        "schema": {
                            "$ref": "#/definitions/model.CustomError"
                        }
                    },
                    "404": {
                        "description": "Entity not found",
                        "schema": {
                            "$ref": "#/definitions/model.CustomError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.AreaDetailed": {
            "type": "object",
            "properties": {
                "cameras": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.Camera"
                    }
                },
                "cords": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.GeoCords"
                    }
                },
                "created_date": {
                    "type": "string",
                    "example": "2025-04-06T03:42:06.553269Z"
                },
                "id": {
                    "type": "integer",
                    "example": 123
                },
                "is_active": {
                    "type": "boolean",
                    "example": true
                },
                "name": {
                    "type": "string",
                    "example": "Perm"
                },
                "updated_date": {
                    "type": "string",
                    "example": "2025-04-06T03:42:06.553269Z"
                }
            }
        },
        "dto.AreaShort": {
            "type": "object",
            "properties": {
                "cords": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.GeoCords"
                    }
                },
                "created_date": {
                    "type": "string",
                    "example": "2025-04-06T03:42:06.553269Z"
                },
                "id": {
                    "type": "integer",
                    "example": 123
                },
                "is_active": {
                    "type": "boolean",
                    "example": true
                },
                "name": {
                    "type": "string",
                    "example": "Perm"
                },
                "updated_date": {
                    "type": "string",
                    "example": "2025-04-06T03:42:06.553269Z"
                }
            }
        },
        "dto.Camera": {
            "type": "object",
            "properties": {
                "altitude": {
                    "type": "number",
                    "example": 27.8
                },
                "angle": {
                    "type": "number",
                    "example": 30.5
                },
                "area_id": {
                    "type": "integer",
                    "example": 1
                },
                "created_date": {
                    "type": "string",
                    "example": "2025-04-06T03:42:06.553269Z"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "ip": {
                    "type": "string",
                    "example": "127.0.0.1"
                },
                "is_active": {
                    "type": "boolean",
                    "example": true
                },
                "latitude": {
                    "type": "number",
                    "example": 27.123454
                },
                "longitude": {
                    "type": "number",
                    "example": 30.123456
                },
                "name": {
                    "type": "string",
                    "example": "Enter"
                },
                "radius": {
                    "type": "number",
                    "example": 10.5
                },
                "sector_angle": {
                    "type": "number",
                    "example": 15.25
                },
                "updated_date": {
                    "type": "string",
                    "example": "2025-04-06T03:42:06.553269Z"
                }
            }
        },
        "dto.GeoCords": {
            "type": "object",
            "properties": {
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                }
            }
        },
        "model.CreateAreaRequest": {
            "type": "object",
            "required": [
                "cords",
                "is_active",
                "name"
            ],
            "properties": {
                "cords": {
                    "type": "array",
                    "minItems": 3,
                    "items": {
                        "$ref": "#/definitions/model.GeoCordsRequest"
                    }
                },
                "is_active": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.CreateCameraRequest": {
            "type": "object",
            "required": [
                "altitude",
                "angle",
                "ip",
                "is_active",
                "latitude",
                "longitude",
                "name",
                "radius",
                "sector_angle"
            ],
            "properties": {
                "altitude": {
                    "type": "number"
                },
                "angle": {
                    "type": "number",
                    "maximum": 359,
                    "minimum": 0
                },
                "ip": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "radius": {
                    "type": "number"
                },
                "sector_angle": {
                    "type": "number",
                    "maximum": 359,
                    "minimum": 0
                }
            }
        },
        "model.CustomError": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "model.GeoCordsRequest": {
            "type": "object",
            "required": [
                "latitude",
                "longitude"
            ],
            "properties": {
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                }
            }
        },
        "model.UpdateAreaRequest": {
            "type": "object",
            "required": [
                "cords",
                "is_active",
                "name"
            ],
            "properties": {
                "cords": {
                    "type": "array",
                    "minItems": 3,
                    "items": {
                        "$ref": "#/definitions/model.GeoCordsRequest"
                    }
                },
                "is_active": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.UpdateCameraRequest": {
            "type": "object",
            "required": [
                "altitude",
                "angle",
                "ip",
                "is_active",
                "latitude",
                "longitude",
                "name",
                "radius",
                "sector_angle"
            ],
            "properties": {
                "altitude": {
                    "type": "number"
                },
                "angle": {
                    "type": "number",
                    "maximum": 359,
                    "minimum": 0
                },
                "ip": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "radius": {
                    "type": "number"
                },
                "sector_angle": {
                    "type": "number",
                    "maximum": 359,
                    "minimum": 0
                }
            }
        }
    }
}